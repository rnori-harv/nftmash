{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshnori/Desktop/nftmash/open-react-template-master/src/components/Feed.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useState, useEffect } from 'react';\nimport { DataStore } from '@aws-amplify/datastore';\nimport { Container } from '@chakra-ui/react';\nimport \"./Feed.css\";\nimport { Candidate, Caption } from '../models';\nimport Card from \"./Card\";\nimport Paginator from \"./Paginator\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nexport function Feed({\n  children\n}) {\n  const [feed, setFeed] = useState([]);\n  let len = 0;\n  useEffect(() => {\n    const getFeed = async () => {\n      const feedData = await DataStore.query(Candidate);\n      feedData.sort((a, b) => a.likes < b.likes ? 1 : -1);\n      lenn = feedData.length;\n      setFeed(feedData);\n    };\n\n    getFeed();\n  }, []);\n  const [index, setIndex] = useState(0);\n\n  const slideLeft = () => {\n    if (index - 1 >= 0) {\n      setIndex(index - 1);\n    }\n  };\n\n  const slideRight = () => {\n    if (index + 1 <= len - 1) {\n      setIndex(index + 1);\n    }\n  };\n\n  const handlePageChange = page => {\n    let n = page - index;\n    setIndex(index + n);\n  };\n\n  const handlePointerEvent = e => {\n    /* check which type of event we have, \n    and set a flag variable */\n    let isTouchEvent = e.type === \"touchstart\" ? true : false;\n    /* this is our card we will move */\n\n    let card = e.target;\n    /* to keep track of the value to offset the card left */\n\n    let offset = 0;\n    /* keeps the initial mouse click x value */\n\n    let initialX = isTouchEvent ? e.touches[0].clientX : e.clientX;\n    /* mouse events */\n\n    /* set the documents onmousemove event to use this function */\n\n    document.onmousemove = onPointerMove;\n    /* sets the documents onmouseup event to use this function */\n\n    document.onmouseup = onPointerEnd;\n    /* touch events */\n\n    /* set the documents ontouchmove to this function */\n\n    document.ontouchmove = onPointerMove;\n    /* set the documents ontouchend to this function */\n\n    document.ontouchend = onPointerEnd;\n    /* when the mouse moves we handle the event here */\n\n    function onPointerMove(e) {\n      /* set offset to the current position of the cursor,\n      minus the initial starting position  */\n      offset = (isTouchEvent ? e.touches[0].clientX : e.clientX) - initialX;\n\n      if (offset <= -100) {\n        slideRight();\n        /* if we're at the last card, snap back to center */\n\n        if (index === len - 1) {\n          card.style.left = 0;\n        } else {\n          /* hide the shift back to center \n          until after the transition */\n          setTimeout(() => {\n            card.style.left = 0;\n          }, 1000);\n        }\n\n        return;\n      }\n\n      if (offset >= 100) {\n        slideLeft();\n        /* if we're at the first card, snap back to center */\n\n        if (index === 0) {\n          card.style.left = 0;\n        } else {\n          /* hide the shift back to center \n          until after the transition */\n          setTimeout(() => {\n            card.style.left = 0;\n          }, 1000);\n        }\n\n        return;\n      }\n      /* set the left style property of the card to the offset value */\n\n\n      card.style.left = offset + \"px\";\n    }\n\n    function onPointerEnd(e) {\n      /* if user releases mouse early,\n      card needs to snap back */\n      if (offset < 0 && offset > -100) {\n        card.style.left = 0;\n      }\n\n      if (offset > 0 && offset < 100) {\n        card.style.left = 0;\n      }\n      /* remove functions from event listeners\n      (stop tracking pointer movements) */\n\n\n      document.onmousemove = null;\n      document.onmouseup = null;\n      document.ontouchmove = null;\n      document.ontouchend = null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, feed.map(post => children({\n    post\n  })));\n}","map":{"version":3,"sources":["/Users/rakeshnori/Desktop/nftmash/open-react-template-master/src/components/Feed.js"],"names":["React","ReactDOM","useState","useEffect","DataStore","Container","Candidate","Caption","Card","Paginator","FontAwesomeIcon","faChevronLeft","faChevronRight","Feed","children","feed","setFeed","len","getFeed","feedData","query","sort","a","b","likes","lenn","length","index","setIndex","slideLeft","slideRight","handlePageChange","page","n","handlePointerEvent","e","isTouchEvent","type","card","target","offset","initialX","touches","clientX","document","onmousemove","onPointerMove","onmouseup","onPointerEnd","ontouchmove","ontouchend","style","left","setTimeout","map","post"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { useState, useEffect } from 'react'\nimport { DataStore } from '@aws-amplify/datastore'\nimport {Container} from '@chakra-ui/react'\nimport \"./Feed.css\";\nimport {Candidate, Caption} from '../models'\nimport Card from \"./Card\";\nimport Paginator from \"./Paginator\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport function Feed ({ children }){\n    const [feed, setFeed] = useState([])\n    let len = 0;\n\n    useEffect(() => {\n        const getFeed = async() => \n        {\n            const feedData = await DataStore.query(Candidate)\n            feedData.sort((a, b) => (a.likes < b.likes) ? 1 : -1)\n            lenn = feedData.length;\n            setFeed(feedData)\n        }\n\n        getFeed()\n    },[])\n\n    const [index, setIndex] = useState(0);\n\n    const slideLeft = () => {\n        if (index - 1 >= 0) {\n          setIndex(index - 1);\n        }\n      };\n    \n      const slideRight = () => {\n        if (index + 1 <= len - 1) {\n          setIndex(index + 1);\n        }\n      };\n    \n      const handlePageChange = (page) => {\n        let n = page - index;\n        setIndex(index + n);\n      };\n\n      const handlePointerEvent = (e) => {\n        /* check which type of event we have, \n        and set a flag variable */\n        let isTouchEvent = e.type === \"touchstart\" ? true : false;\n    \n        /* this is our card we will move */\n        let card = e.target;\n        /* to keep track of the value to offset the card left */\n        let offset = 0;\n        /* keeps the initial mouse click x value */\n        let initialX = isTouchEvent ? e.touches[0].clientX : e.clientX;\n    \n        /* mouse events */\n        /* set the documents onmousemove event to use this function */\n        document.onmousemove = onPointerMove;\n        /* sets the documents onmouseup event to use this function */\n        document.onmouseup = onPointerEnd;\n    \n        /* touch events */\n        /* set the documents ontouchmove to this function */\n        document.ontouchmove = onPointerMove;\n        /* set the documents ontouchend to this function */\n        document.ontouchend = onPointerEnd;\n    \n        /* when the mouse moves we handle the event here */\n        function onPointerMove(e) {\n          /* set offset to the current position of the cursor,\n          minus the initial starting position  */\n          offset = (isTouchEvent ? e.touches[0].clientX : e.clientX) - initialX;\n          if (offset <= -100) {\n            slideRight();\n            /* if we're at the last card, snap back to center */\n            if (index === len - 1) {\n              card.style.left = 0;\n            } else {\n              /* hide the shift back to center \n            until after the transition */\n              setTimeout(() => {\n                card.style.left = 0;\n              }, 1000);\n            }\n            return;\n          }\n          if (offset >= 100) {\n            slideLeft();\n            /* if we're at the first card, snap back to center */\n            if (index === 0) {\n              card.style.left = 0;\n            } else {\n              /* hide the shift back to center \n            until after the transition */\n              setTimeout(() => {\n                card.style.left = 0;\n              }, 1000);\n            }\n            return;\n          }\n          /* set the left style property of the card to the offset value */\n          card.style.left = offset + \"px\";\n        }\n    \n        function onPointerEnd(e) {\n          /* if user releases mouse early,\n          card needs to snap back */\n          if (offset < 0 && offset > -100) {\n            card.style.left = 0;\n          }\n          if (offset > 0 && offset < 100) {\n            card.style.left = 0;\n          }\n          /* remove functions from event listeners\n          (stop tracking pointer movements) */\n          document.onmousemove = null;\n          document.onmouseup = null;\n    \n          document.ontouchmove = null;\n          document.ontouchend = null;\n        }\n      };\n    \n    return (\n        <Container>\n            {feed.map(post => children({ post }))}\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}