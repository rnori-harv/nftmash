{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshnori/Downloads/open-react-template-master/src/components/CommentList.js\";\nimport { useEffect, useState } from 'react';\nimport { DataStore } from '@aws-amplify/datastore';\nimport { Caption } from '../models';\nimport { Box, Image, Flex, Avatar, Text, Spacer, IconButton } from '@chakra-ui/react';\nimport { ChatIcon, ArrowUpIcon, ArrowDownIcon } from '@chakra-ui/icons';\nimport { render } from 'react-dom';\n\nfunction doLike(comment) {\n  DataStore.save(Caption.copyOf(comment, updated => {\n    updated.likes = updated.likes + 1;\n  }));\n}\n\nfunction doDislike(comment) {\n  DataStore.save(Caption.copyOf(comment, updated => {\n    updated.likes = updated.likes - 1;\n  }));\n}\n\nexport function CommentList({\n  postId\n}) {\n  const [clicked, setClicked] = useState(false);\n\n  const onClick = comment => {\n    if (!clicked) {\n      setClicked(true);\n      doLike(comment);\n    }\n  };\n\n  const onClick2 = comment => {\n    if (!clicked) {\n      setClicked(true);\n      doDislike(comment);\n    }\n  };\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComments = async () => {\n      const postComments = await DataStore.query(Caption, p => p.candidateID === postId);\n      const actualPostComments = [];\n\n      for (var i = 0; i < postComments.length; i++) {\n        if (postComments[i].candidateID === postId) {\n          actualPostComments.push(postComments[i]);\n        }\n      }\n\n      actualPostComments.sort((a, b) => a.likes < b.likes ? 1 : -1);\n      setComments(actualPostComments);\n    };\n\n    getComments();\n  }, []);\n  const [likes, setLikes] = useState([]);\n  return /*#__PURE__*/React.createElement(Box, {\n    ml: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, setLikes, comment.likes, /*#__PURE__*/React.createElement(IconButton, {\n    colorScheme: \"green\",\n    icon: /*#__PURE__*/React.createElement(ArrowUpIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 55\n      }\n    }),\n    onClick: () => onClick(comment),\n    variant: \"ghost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    colorScheme: \"red\",\n    icon: /*#__PURE__*/React.createElement(ArrowDownIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 53\n      }\n    }),\n    onClick: () => onClick2(comment),\n    variant: \"ghost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    as: \"b\",\n    color: \"#9430f1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, comment.User.username), \" \", comment.body)));\n}","map":{"version":3,"sources":["/Users/rakeshnori/Downloads/open-react-template-master/src/components/CommentList.js"],"names":["useEffect","useState","DataStore","Caption","Box","Image","Flex","Avatar","Text","Spacer","IconButton","ChatIcon","ArrowUpIcon","ArrowDownIcon","render","doLike","comment","save","copyOf","updated","likes","doDislike","CommentList","postId","clicked","setClicked","onClick","onClick2","comments","setComments","getComments","postComments","query","p","candidateID","actualPostComments","i","length","push","sort","a","b","setLikes","map","User","username","body"],"mappings":"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","sourcesContent":["import { useEffect, useState} from 'react'\nimport {DataStore} from '@aws-amplify/datastore'\nimport {Caption} from '../models'\nimport { Box, Image, Flex, Avatar, Text, Spacer, IconButton } from '@chakra-ui/react'\nimport { ChatIcon, ArrowUpIcon, ArrowDownIcon} from '@chakra-ui/icons'\nimport { render } from 'react-dom'\n\n\nfunction doLike(comment){\n    DataStore.save(\n        Caption.copyOf(comment, updated => {\n          updated.likes = updated.likes + 1;}))\n\n}\n\nfunction doDislike(comment){\n    DataStore.save(\n        Caption.copyOf(comment, updated => {\n          updated.likes = updated.likes - 1;}))\n\n}\n\n\nexport function CommentList({ postId }) {\n    const [clicked, setClicked] = useState(false);\n    const onClick = (comment) => {\n        if (!clicked) {\n          setClicked(true);\n          doLike(comment);\n        }\n      };\n\n      const onClick2 = (comment) => {\n        if (!clicked) {\n          setClicked(true);\n          doDislike(comment);\n        }\n      };\n    const [comments, setComments] = useState([])\n    useEffect(() => {\n        const getComments = async() => {\n            const postComments = await DataStore.query(Caption, p => p.candidateID === postId)\n            const actualPostComments = []\n            for (var i = 0; i < postComments.length; i++) {\n                 if (postComments[i].candidateID === postId){\n                     actualPostComments.push(postComments[i])\n                 }\n            }\n            actualPostComments.sort((a, b) => (a.likes < b.likes) ? 1 : -1)\n            setComments(actualPostComments)\n        }\n        getComments()\n    }, [])\n    const [likes, setLikes] = useState([])\n    return (\n        <Box ml={3}>\n            {comments.map(comment => (\n            <Box>\n                {setLikes}\n                {comment.likes}\n                <IconButton colorScheme=\"green\" icon={<ArrowUpIcon />} \n            onClick={() => onClick(comment)} variant='ghost' />\n                <IconButton colorScheme=\"red\" icon={<ArrowDownIcon />} \n            onClick={() => onClick2(comment)} variant='ghost' />\n                <Text as='b' color=\"#9430f1\">{comment.User.username}</Text> {comment.body}\n            </Box>\n            ))}\n        </Box>\n    )\n}"]},"metadata":{},"sourceType":"module"}