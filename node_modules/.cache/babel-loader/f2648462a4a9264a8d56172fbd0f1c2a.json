{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshnori/Desktop/nftmash/open-react-template-master/src/components/Feed.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useState, useEffect } from 'react';\nimport { DataStore } from '@aws-amplify/datastore';\nimport { Container } from '@chakra-ui/react';\nimport \"./Feed.css\";\nimport { Candidate, Caption } from '../models';\nexport function Feed({\n  children\n}) {\n  const [feed, setFeed] = useState([]);\n  useEffect(() => {\n    const getFeed = async () => {\n      const feedData = await DataStore.query(Candidate);\n      feedData.sort((a, b) => a.likes < b.likes ? 1 : -1);\n      setFeed(feedData);\n    };\n\n    getFeed();\n  }, []);\n\n  function determineClasses(indexes, cardIndex) {\n    if (indexes.currentIndex === cardIndex) {\n      return \"active\";\n    } else if (indexes.nextIndex === cardIndex) {\n      return \"next\";\n    } else if (indexes.previousIndex === cardIndex) {\n      return \"prev\";\n    }\n\n    return \"inactive\";\n  }\n\n  const CardCarousel = () => {\n    const [indexes, setIndexes] = useState({\n      previousIndex: 0,\n      currentIndex: 0,\n      nextIndex: 1\n    });\n    const handleCardTransition = useCallback(() => {\n      // If we've reached the end, start again from the first card,\n      // but carry previous value over\n      if (indexes.currentIndex >= feed.length - 1) {\n        setIndexes({\n          previousIndex: feed.length - 1,\n          currentIndex: 0,\n          nextIndex: 1\n        });\n      } else {\n        setIndexes(prevState => ({\n          previousIndex: prevState.currentIndex,\n          currentIndex: prevState.currentIndex + 1,\n          nextIndex: prevState.currentIndex + 2 === feed.length ? 0 : prevState.currentIndex + 2\n        }));\n      }\n    }, [indexes.currentIndex]);\n    useEffect(() => {\n      const transitionInterval = setInterval(() => {\n        handleCardTransition();\n      }, 4000);\n      return () => clearInterval(transitionInterval);\n    }, [handleCardTransition, indexes]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"card-carousel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, feed.map((card, index) => {\n      children({\n        post\n      });\n    })));\n  };\n\n  return CardCarousel;\n}","map":{"version":3,"sources":["/Users/rakeshnori/Desktop/nftmash/open-react-template-master/src/components/Feed.js"],"names":["React","ReactDOM","useState","useEffect","DataStore","Container","Candidate","Caption","Feed","children","feed","setFeed","getFeed","feedData","query","sort","a","b","likes","determineClasses","indexes","cardIndex","currentIndex","nextIndex","previousIndex","CardCarousel","setIndexes","handleCardTransition","useCallback","length","prevState","transitionInterval","setInterval","clearInterval","map","card","index","post"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAO,YAAP;AAEA,SAAQC,SAAR,EAAmBC,OAAnB,QAAiC,WAAjC;AAEA,OAAO,SAASC,IAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA4B;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,OAAO,GAAG,YAChB;AACI,YAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACU,KAAV,CAAgBR,SAAhB,CAAvB;AACAO,MAAAA,QAAQ,CAACE,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAb,GAAsB,CAAtB,GAA0B,CAAC,CAAnD;AACAP,MAAAA,OAAO,CAACE,QAAD,CAAP;AACH,KALD;;AAOAD,IAAAA,OAAO;AACV,GATQ,EASP,EATO,CAAT;;AAUA,WAASO,gBAAT,CAA0BC,OAA1B,EAAmCC,SAAnC,EAA8C;AAC1C,QAAID,OAAO,CAACE,YAAR,KAAyBD,SAA7B,EAAwC;AACtC,aAAO,QAAP;AACD,KAFD,MAEO,IAAID,OAAO,CAACG,SAAR,KAAsBF,SAA1B,EAAqC;AAC1C,aAAO,MAAP;AACD,KAFM,MAEA,IAAID,OAAO,CAACI,aAAR,KAA0BH,SAA9B,EAAyC;AAC9C,aAAO,MAAP;AACD;;AACD,WAAO,UAAP;AACD;;AAED,QAAMI,YAAY,GAAG,MAAM;AACzB,UAAM,CAACL,OAAD,EAAUM,UAAV,IAAwBxB,QAAQ,CAAC;AACrCsB,MAAAA,aAAa,EAAE,CADsB;AAErCF,MAAAA,YAAY,EAAE,CAFuB;AAGrCC,MAAAA,SAAS,EAAE;AAH0B,KAAD,CAAtC;AAMA,UAAMI,oBAAoB,GAAGC,WAAW,CAAC,MAAM;AAC7C;AACA;AACA,UAAIR,OAAO,CAACE,YAAR,IAAwBZ,IAAI,CAACmB,MAAL,GAAc,CAA1C,EAA6C;AAC3CH,QAAAA,UAAU,CAAC;AACTF,UAAAA,aAAa,EAAEd,IAAI,CAACmB,MAAL,GAAc,CADpB;AAETP,UAAAA,YAAY,EAAE,CAFL;AAGTC,UAAAA,SAAS,EAAE;AAHF,SAAD,CAAV;AAKD,OAND,MAMO;AACLG,QAAAA,UAAU,CAACI,SAAS,KAAK;AACvBN,UAAAA,aAAa,EAAEM,SAAS,CAACR,YADF;AAEvBA,UAAAA,YAAY,EAAEQ,SAAS,CAACR,YAAV,GAAyB,CAFhB;AAGvBC,UAAAA,SAAS,EACPO,SAAS,CAACR,YAAV,GAAyB,CAAzB,KAA+BZ,IAAI,CAACmB,MAApC,GACI,CADJ,GAEIC,SAAS,CAACR,YAAV,GAAyB;AANR,SAAL,CAAV,CAAV;AAQD;AACF,KAnBuC,EAmBrC,CAACF,OAAO,CAACE,YAAT,CAnBqC,CAAxC;AAqBAnB,IAAAA,SAAS,CAAC,MAAM;AACd,YAAM4B,kBAAkB,GAAGC,WAAW,CAAC,MAAM;AAC3CL,QAAAA,oBAAoB;AACrB,OAFqC,EAEnC,IAFmC,CAAtC;AAIA,aAAO,MAAMM,aAAa,CAACF,kBAAD,CAA1B;AACD,KANQ,EAMN,CAACJ,oBAAD,EAAuBP,OAAvB,CANM,CAAT;AAQA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,IAAI,CAACwB,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAC3B,MAAAA,QAAQ,CAAC;AAAE4B,QAAAA;AAAF,OAAD,CAAR;AAC3B,KADA,CADH,CADF,CADF;AAQD,GA5CD;;AA6CF,SAAOZ,YAAP;AACH","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { useState, useEffect } from 'react'\nimport { DataStore } from '@aws-amplify/datastore'\nimport {Container} from '@chakra-ui/react'\nimport \"./Feed.css\";\n\nimport {Candidate, Caption} from '../models'\n\nexport function Feed ({ children }){\n    const [feed, setFeed] = useState([])\n\n    useEffect(() => {\n        const getFeed = async() => \n        {\n            const feedData = await DataStore.query(Candidate)\n            feedData.sort((a, b) => (a.likes < b.likes) ? 1 : -1)\n            setFeed(feedData)\n        }\n\n        getFeed()\n    },[])\n    function determineClasses(indexes, cardIndex) {\n        if (indexes.currentIndex === cardIndex) {\n          return \"active\";\n        } else if (indexes.nextIndex === cardIndex) {\n          return \"next\";\n        } else if (indexes.previousIndex === cardIndex) {\n          return \"prev\";\n        }\n        return \"inactive\";\n      }\n      \n      const CardCarousel = () => {\n        const [indexes, setIndexes] = useState({\n          previousIndex: 0,\n          currentIndex: 0,\n          nextIndex: 1\n        });\n      \n        const handleCardTransition = useCallback(() => {\n          // If we've reached the end, start again from the first card,\n          // but carry previous value over\n          if (indexes.currentIndex >= feed.length - 1) {\n            setIndexes({\n              previousIndex: feed.length - 1,\n              currentIndex: 0,\n              nextIndex: 1\n            });\n          } else {\n            setIndexes(prevState => ({\n              previousIndex: prevState.currentIndex,\n              currentIndex: prevState.currentIndex + 1,\n              nextIndex:\n                prevState.currentIndex + 2 === feed.length\n                  ? 0\n                  : prevState.currentIndex + 2\n            }));\n          }\n        }, [indexes.currentIndex]);\n      \n        useEffect(() => {\n          const transitionInterval = setInterval(() => {\n            handleCardTransition();\n          }, 4000);\n      \n          return () => clearInterval(transitionInterval);\n        }, [handleCardTransition, indexes]);\n      \n        return (\n          <div className=\"container\">\n            <ul className=\"card-carousel\">\n              {feed.map((card, index) => {children({ post });\n              })}\n            </ul>\n          </div>\n        );\n      };\n    return(CardCarousel);\n}"]},"metadata":{},"sourceType":"module"}