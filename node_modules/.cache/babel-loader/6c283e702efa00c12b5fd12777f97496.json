{"ast":null,"code":"var _jsxFileName = \"/Users/rakeshnori/Desktop/nftmash/open-react-template-master/src/components/CommentList.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useEffect, useState } from 'react';\nimport { DataStore } from '@aws-amplify/datastore';\nimport { Caption } from '../models';\nimport { Box, Image, Flex, Avatar, Text, Spacer, IconButton } from '@chakra-ui/react';\nimport { ChatIcon, ArrowUpIcon, ArrowDownIcon } from '@chakra-ui/icons';\nimport { render } from 'react-dom';\n\nfunction doLike(comment) {\n  DataStore.save(Caption.copyOf(comment, updated => {\n    updated.likes = updated.likes + 1;\n  }));\n}\n\nfunction doDislike(comment) {\n  DataStore.save(Caption.copyOf(comment, updated => {\n    updated.likes = updated.likes - 1;\n  }));\n}\n\nexport function CommentList({\n  postId\n}) {\n  const [clicked, setClicked] = useState(false);\n  const [likes, setLikes] = useState([]);\n\n  const onClick = comment => {\n    if (!clicked) {\n      setClicked(true);\n      doLike(comment);\n    }\n  };\n\n  const onClick2 = comment => {\n    if (!clicked) {\n      setClicked(true);\n      doDislike(comment);\n    }\n  };\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getComments = async () => {\n      const postComments = await DataStore.query(Caption, p => p.candidateID === postId);\n      const actualPostComments = [];\n\n      for (var i = 0; i < postComments.length; i++) {\n        if (postComments[i].candidateID === postId) {\n          actualPostComments.push(postComments[i]);\n        }\n      }\n\n      actualPostComments.sort((a, b) => a.likes < b.likes ? 1 : -1);\n      setComments(actualPostComments);\n    };\n\n    getComments();\n  }, []);\n  {\n    comments.map(comment => {\n      setLikes(comment.likes);\n      return /*#__PURE__*/React.createElement(Box, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, likes, /*#__PURE__*/React.createElement(IconButton, {\n        colorScheme: \"green\",\n        icon: /*#__PURE__*/React.createElement(ArrowUpIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 55\n          }\n        }),\n        onClick: () => onClick(comment),\n        variant: \"ghost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(IconButton, {\n        colorScheme: \"red\",\n        icon: /*#__PURE__*/React.createElement(ArrowDownIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 53\n          }\n        }),\n        onClick: () => onClick2(comment),\n        variant: \"ghost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Text, {\n        as: \"b\",\n        color: \"#9430f1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, comment.User.username), \" \", comment.body);\n    });\n  }\n}","map":{"version":3,"sources":["/Users/rakeshnori/Desktop/nftmash/open-react-template-master/src/components/CommentList.js"],"names":["React","ReactDOM","useEffect","useState","DataStore","Caption","Box","Image","Flex","Avatar","Text","Spacer","IconButton","ChatIcon","ArrowUpIcon","ArrowDownIcon","render","doLike","comment","save","copyOf","updated","likes","doDislike","CommentList","postId","clicked","setClicked","setLikes","onClick","onClick2","comments","setComments","getComments","postComments","query","p","candidateID","actualPostComments","i","length","push","sort","a","b","map","User","username","body"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { useEffect, useState} from 'react'\nimport {DataStore} from '@aws-amplify/datastore'\nimport {Caption} from '../models'\nimport { Box, Image, Flex, Avatar, Text, Spacer, IconButton } from '@chakra-ui/react'\nimport { ChatIcon, ArrowUpIcon, ArrowDownIcon} from '@chakra-ui/icons'\nimport { render } from 'react-dom'\n\n\nfunction doLike(comment){\n    DataStore.save(\n        Caption.copyOf(comment, updated => {\n          updated.likes = updated.likes + 1;}))\n\n}\n\nfunction doDislike(comment){\n    DataStore.save(\n        Caption.copyOf(comment, updated => {\n          updated.likes = updated.likes - 1;}))\n\n}\n\n\nexport function CommentList({ postId }) {\n    const [clicked, setClicked] = useState(false);\n    const [likes, setLikes] = useState([])\n    const onClick = (comment) => {\n        if (!clicked) {\n          setClicked(true);\n          doLike(comment);\n        }\n      };\n\n      const onClick2 = (comment) => {\n        if (!clicked) {\n          setClicked(true);\n          doDislike(comment);\n        }\n      };\n    const [comments, setComments] = useState([])\n    useEffect(() => {\n        const getComments = async() => {\n            const postComments = await DataStore.query(Caption, p => p.candidateID === postId)\n            const actualPostComments = []\n            for (var i = 0; i < postComments.length; i++) {\n                 if (postComments[i].candidateID === postId){\n                     actualPostComments.push(postComments[i])\n                 }\n            }\n            actualPostComments.sort((a, b) => (a.likes < b.likes) ? 1 : -1)\n            setComments(actualPostComments)\n        }\n        getComments()\n    }, [])\n            {comments.map(comment => {\n            setLikes(comment.likes)\n            return(\n            <Box>\n                {likes}\n                <IconButton colorScheme=\"green\" icon={<ArrowUpIcon />} \n            onClick={() => onClick(comment)} variant='ghost' />\n                <IconButton colorScheme=\"red\" icon={<ArrowDownIcon />} \n            onClick={() => onClick2(comment)} variant='ghost' />\n                <Text as='b' color=\"#9430f1\">{comment.User.username}</Text> {comment.body}\n            </Box>);\n        })}\n}"]},"metadata":{},"sourceType":"module"}